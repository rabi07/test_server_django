name: CI/CD Pipeline

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Install AWS CLI
      run: |
        sudo apt-get update
        sudo apt-get install awscli -y

    - name: Configure AWS CLI
      run: |
        aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws configure set region ap-south-1

    - name: Login to AWS ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1
      with:
        registry-type: private

    - name: Build and push Docker image
      id: build-image
      run: |
        IMAGE_TAG=${GITHUB_SHA}
        docker build -t 577793742906.dkr.ecr.ap-south-1.amazonaws.com/my-app:${IMAGE_TAG} .
        docker push 577793742906.dkr.ecr.ap-south-1.amazonaws.com/my-app:${IMAGE_TAG}
      env:
        AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Deploy to EC2
      run: |
        IMAGE_TAG=${GITHUB_SHA}
        ssh -o StrictHostKeyChecking=no -i "${{ secrets.EC2_SSH_KEY }}" ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << 'EOF'
          docker pull ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.ap-south-1.amazonaws.com/${{ secrets.ECR_REPOSITORY }}:${IMAGE_TAG}
          docker stop my-app || true
          docker rm my-app || true
          docker run -d -p 8000:8000 --name my-app ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.ap-south-1.amazonaws.com/${{ secrets.ECR_REPOSITORY }}:${IMAGE_TAG}
        EOF

      env:
        AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
        AWS_REGION: ap-south-1
        IMAGE_TAG: ${{ github.sha }}
